{
  "$schema": "http://json-schema.org/draft-06/schema#",
  "id": "https://myrapidi.github.com/jsonschemas/avj_storyblok_content#",
  "title": "StoryBlok stories for AV Jennings",
  "description": "The Stories API empowers developers to automate, extend and combine StoryBlok with other services.",
  "type": [
    "object"
  ],
  "definitions": {
    "space": {
      "description": "A Storyblok Service for AVJennings.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "beta",
      "strictProperties": true,
      "title": "StoryBlok API - Service AVJennings",
      "type": [
        "object"
      ],
      "definitions": {
        "spaceid": {
          "description": "unique space identifier",
          "example": "3000379",
          "readOnly": true,
          "type": [
            "integer"
          ]
        },
        "description": {
          "description": "description of the service",
          "example": "Live service for MyCompany",
          "readOnly": true,
          "type": [
            "string"
          ]
        }
      },
      "properties": {
        "spaceid": {
          "$ref": "#/definitions/space/definitions/spaceid"
        }
      }
    },
    "story": {
      "description": "Story for the StoryBlok space.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "beta",
      "strictProperties": true,
      "title": "Story",
      "type": [
        "object"
      ],
      "definitions": {
        "name": {
          "description": "name of the story.",
          "example": "My Story",
          "readOnly": false,
          "type": [
            "string"
          ]
        },
        "parent_id": {
          "description": "parent id",
          "example": "34322",
          "readOnly": false,
          "type": [
            "integer"
          ]
        },
        "id": {
          "description": "id of the story",
          "example": "40996",
          "readOnly": false,
          "type": [
            "integer"
          ]
        },
        "slug": {
          "description": "slug for the story",
          "example": "0646-01-2-0112",
          "readOnly": false,
          "type": [
            "string"
          ]
        },
        "PK_ProjID": {
          "description": "AX Project ID.",
          "example": "123",
          "readOnly": false,
          "type": [
            "integer"
            },
        "full_slug": {
          "description": "The full slug of the story, combining the parent folder(s) and the designated story slug.",
          "example": "properties/0646-01-2-0112",
          "readOnly": false,
          "type": [
            "String"
          ]
        },
        "updated_at": {
          "description": "when story was last updated",
          "example": "2024-06-07T03:24:49.866Z",
          "format": "date-time",
          "readOnly": true,
          "type": [
            "string"
          ]
        },
        "publish": {
          "description": "if the story is to be published",
          "example": true,
          "readOnly": false,
          "type": [
            "boolean"
          ]
        },
        "is_folder": {
          "description": "if this is a folder (no body)",
          "example": true,
          "readOnly": false,
          "type": [
            "boolean"
          ]
        },
        "content": {
          "description": "content of the story",
          "example": "object with component and body",
          "readOnly": false,
          "type": [
            "object"
          ],
          "$ref": "#/definitions/content"
        }
      },
      "links": [
        {
          "description": "Create new story.",
          "href": "/v1_ap/spaces/{(%23%2Fdefinitions%2Fspace%2Fdefinitions%2Fspaceid)}/stories",
          "method": "POST,SETNAME",
          "rel": "create",
          "schema": {
            "properties": {
              "name": {
                "$ref": "#/definitions/story/definitions/name"
              },
              "parent_id": {
                "$ref": "#/definitions/story/definitions/parent_id"
              },
              "publish": {
                "$ref": "#/definitions/story/definitions/publish"
              },
              "is_folder": {
                "$ref": "#/definitions/story/definitions/is_folder"
              },
              "PK_ProjID": {
                "$ref": "#/definitions/story/definitions/PK_ProjID"
              },
              "full_slug": {
                "$ref": "#/definitions/story/definitions/full_slug"
              },
              "content": {
                "$ref": "#/definitions/story/definitions/content"
              }
            },
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/story"
          },
          "title": "Create"
        },
        {
          "description": "Update an existing story.",
          "href": "/v1_ap/spaces/{(%23%2Fdefinitions%2Fspace%2Fdefinitions%2Fspaceid)}/stories/{(%23%2Fdefinitions%2Fstory%2Fdefinitions%2Fid)}",
          "method": "PATCH",
          "rel": "update",
          "schema": {
            "properties": {
              "name": {
                "$ref": "#/definitions/story/definitions/name"
              },
              "publish": {
                "$ref": "#/definitions/story/definitions/publish"
              },
              "PK_ProjID": {
                "$ref": "#/definitions/story/definitions/PK_ProjID"
              }
            },
            "type": [
              "object"
            ]
          },
          "targetSchema": {
            "$ref": "#/definitions/story"
          },
          "title": "Update"
        },
        {
          "description": "Info for an existing story.",
          "href": "/v1_ap/spaces/{(%23%2Fdefinitions%2Fspace%2Fdefinitions%2Fspaceid)}/stories/{(%23%2Fdefinitions%2Fstory%2Fdefinitions%2Fid)}",
          "method": "GET,SETNAME",
          "rel": "self",
          "targetSchema": {
            "$ref": "#/definitions/story"
          },
          "title": "Info"
        },
        {
          "description": "List existing stories.",
          "href": "/v1_ap/spaces/{(%23%2Fdefinitions%2Fspace%2Fdefinitions%2Fspaceid)}/stories",
          "method": "GET",
          "rel": "instances",
          "targetSchema": {
            "items": {
              "$ref": "#/definitions/story"
            },
            "type": [
              "array"
            ]
          },
          "title": "List"
        },
        {
          "description": "Delete an existing story.",
          "href": "/v1_ap/spaces/{(%23%2Fdefinitions%2Fspace%2Fdefinitions%2Fspaceid)}/stories/{(%23%2Fdefinitions%2Fstory%2Fdefinitions%2Fid)}",
          "method": "DELETE",
          "rel": "delete",
          "title": "Delete"
        }
      ],
      "properties": {
        "name": {
          "$ref": "#/definitions/story/definitions/name"
        },
        "parent_id": {
          "$ref": "#/definitions/story/definitions/parent_id"
        },
        "publish": {
          "$ref": "#/definitions/story/definitions/publish"
        },
        "is_folder": {
          "$ref": "#/definitions/story/definitions/is_folder"
        },
        "PK_ProjID": {
        "$ref": "#/definitions/story/definitions/PK_ProjID"
        },
        "full_slug": {
        "$ref": "#/definitions/story/definitions/full_slug"
        },
        "id": {
          "$ref": "#/definitions/story/definitions/id"
        },
        "slug": {
          "$ref": "#/definitions/story/definitions/slug"
        },
        "updated_at": {
          "$ref": "#/definitions/story/definitions/updated_at"
        },
        "content": {
          "$ref": "#/definitions/story/definitions/content"
        }
      }
    },
    "content": {
      "description": "Content in a Story.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "beta",
      "strictProperties": true,
      "title": "Content",
      "type": [
        "object"
      ],
      "parentObject": {
        "story": { "$ref": "#/definitions/story/definitions/content" }
      },
      "definitions": {
        "component": {
          "description": "component name of the content in story.",
          "example": "ERP_Property",
          "readOnly": false,
          "type": [
            "string"
          ]
        },
        "PK_ProjID": {
          "description": "project ID of the content in story.",
          "example": "proj123",
          "readOnly": false,
          "maxLength": 20,
          "type": "string"
        },
        "PK_dataareaId": {
          "description": "dataareaId of the content in story.",
          "example": "31",
          "readOnly": false,
          "maxLength": 4,
          "type": "string"
          },
        "JobName": {
          "description": "JobName of the content in story.",
          "example": "Lot 51 Mercator Close Lake Munmorah",
          "readOnly": false,
          "maxLength": 60,
          "type": "string"
           },
        "JobAddress": {
          "description": "JobAddress of the content in story.",
          "example": " Loc 51 27 Mercator Close  Lake Munmorah
NSW 2259",
          "readOnly": false,
          "maxLength": 250,
          "type": "string"
        },
        "CustomerID": {
          "description":"Customer No.",
          "example":"",
          "readOnly":false,
          "maxLength":20,
          "type":"string"
          },
        "ProjectType": {
          "description":"Project Type",
          "example":"05 - Apartments\n04 - Development House\n03",
          "readOnly":false,
          "maxLength":60,
          "type":"string"
          },
        "SubProjectType": {
          "description":"Sub Project Type",
          "example":"Apartment, Apartment-Englobo",
          "readOnly":false,
          "maxLength":60,
          "type":"string"
          },
        "BuildingType": {
          "description":"Building Type",
          "example":"Apartment/Double/Duplex/Fonzie Flat/Quadplex",
          "readOnly":false,
          "maxLength":60,
          "type":"string"
          },
        "Storeys": {
          "description":"Storeys",
          "example":"Double/Single/Triple",
          "readOnly":false,
          "maxLength":60,
          "type":"string"
          },
        "FacadeType": {
          "description":"Facade Type",
          "example":"Alula/Aquila/Ashwood",
          "readOnly":false,
          "maxLength":60,
          "type":"string"
          },
        "Series": {
          "description":"Series",
          "example":"Allambie 205 Lyra",
          "readOnly":false,
          "maxLength":30,
          "type":"string"
          },
        "GasElectric": {
          "description":"Gas Electric",
          "example":"Gas&Electric,Gas Only, Electronic only",
          "readOnly":false,
          "maxLength":20,
          "type":"string"
          },
        "InternalFloorArea": {
          "description":"Internal Floor Area",
          "example":"214.46",
          "readOnly":false,
          "maxLength":30,
          "type":"Integer"
           },
        "ColorCode": {
          "description":"Color Code",
          "example":"**V114.4P",
          "readOnly":false,
          "maxLength":10,
          "type":"String"
           },
        "CarAccomodation": {
          "description":"Car Accomodation",
          "example":"Car Port/Double Lockup Garage/No Garage/Tandum Lockup Garage/Single Lockup Garage",
          "readOnly":false,
          "maxLength":60,
          "type":"String"
           },
        "Bedrooms": {
          "description":"Bedrooms",
          "example":"1,2,3,4,5",
          "readOnly":false,
          "maxLength":2,
          "type":"String"
           },
        "BathRooms": {
          "description":"BathRooms",
          "example":"1,1.2,2,2.5",
          "readOnly":false,
          "maxLength":3,
          "type":"String"
           },
        "ListPrice": {
          "description":"List Price",
          "example":"28000",
          "readOnly":false,
          "maxLength":30,
          "type":"Integer"
           },
        "Corner": {
          "description":"Corner",
          "example":"0=1,1=Yes",
          "readOnly":false,
          "maxLength":2,
          "type":"Boolean"
            },
        "Irregular": {
          "description":"Irregular",
          "example":"0=1,1=Yes",
          "readOnly":false,
          "maxLength":2,
          "type":"Boolean"
            },
        "Orientation": {
          "description":"Orientation",
          "example":"Left,Right",
          "readOnly":false,
          "maxLength":60,
          "type":"String"
            },
        "Aspect": {
          "description":"Aspect",
          "example":"ID-DEscription, N- North, S-South, E-East,NE-North/East, SE - South/East,SW-South/West",
          "readOnly":false,
          "maxLength":60,
          "type":"String"
            },
        "Estate": {
          "description":"Estate",
          "example":"Mardi-Sternbeck,Hamlyn Terrace-Gavin",
          "readOnly":false,
          "maxLength":60,
          "type":"String"
            },
        "Stage": {
          "description":"Stage",
          "example":"Stage 01, Stage 9A",
          "readOnly":false,
          "maxLength":60,
          "type":"String"
            },
        "Devstatus": {
          "description":"Development Status [Devstatus]",
          "example":"COMPLETED-Completed,UNDER_CONS-Under Construction,UNZONED-Unzoned,Broad Acre Land",
          "readOnly":false,
          "maxLength":10,
          "type":"String"
            },
        "StockStatus": {
          "description":"Stock Status",
          "example":"Land sale, House sale, AVJ display, Builder sale",
          "readOnly":false,
          "maxLength":20,
          "type":"String"
            },
        "JobStatus": {
          "description":"Job Status",
          "example":"Available, Contract Issued, Closed, Lost, Conditional Contract Signed, Contract Request Deposit, Settled-Closed Won, Unconditional Contract Signed",
          "readOnly":false,
          "maxLength":30,
          "type":"String"
            },
        "Available": {
          "description":"Available",
          "example":"1 or 0",
          "readOnly":false,
          "maxLength":2,
          "type":"Boolean"
            },
        "WIDTH": {
          "description":"WIDTH",
          "example":"15",
          "readOnly":false,
          "maxLength":30,
          "type":"Numeric"
            },
        "DEPTH": {
          "description":"DEPTH",
          "example":"20",
          "readOnly":false,
          "maxLength":30,
          "type":"Numeric"
            },
        "LandArea": {
          "description":"Land Area",
          "example":"300",
          "readOnly":false,
          "maxLength":30,
          "type":"Numeric"
            },
        "NumOfLots": {
          "description":"No of Lots",
          "example":"1",
          "readOnly":false,
          "maxLength":30,
          "type":"Integer"
            },
        "RegistrationNo": {
          "description":"Folio/Volume (Registration No.)",
          "example":"IO6589456",
          "readOnly":false,
          "maxLength":15,
          "type":"string"
            },
        "BuiltFormType": {
          "description":"Built Form Type",
          "example":"Villa,Duplex,Townhome",
          "readOnly":false,
          "maxLength":20,
          "type":"string"
            },
        "BuildingID": {
          "description":"Building ID",
          "example":"Building A, Building B",
          "readOnly":false,
          "maxLength":30,
          "type":"string"
            },
        "Level": {
          "description":"Level/Floor",
          "example":"Ground,Level 1, Level 2",
          "readOnly":false,
          "maxLength":30,
          "type":"string"
            },
        "CPAllocation": {
          "description":"Car Park Allocation",
          "example":"1,2,3,4",
          "readOnly":false,
          "maxLength":1,
          "type":"string"
            },
        "CPNumber": {
          "description":"Car Park Number",
          "example":"101,102,103",
          "readOnly":false,
          "maxLength":20,
          "type":"string"
           },
        "StorageAllocation": {
          "description":"Storage Allocation",
          "example":"15 m2",
          "readOnly":false,
          "maxLength":30,
          "type":"Integer"
           },
        "ExternalArea": {
          "description":"External Area",
          "example":"20 m2",
          "readOnly":false,
          "maxLength":30,
          "type":"Numeric"
           },
        "TotalArea": {
          "description":"Total Area",
          "example":"60.5,80,95",
          "readOnly":false,
          "maxLength":30,
          "type":"Numeric"
           },
        "Study": {
          "description":"Study",
          "example":"1=Yes,0=No",
          "readOnly":false,
          "maxLength":30,
          "type":"Boolean"
           },
        "BikeSpace": {
          "description":"Bike Space",
          "example":"1=Yes,0=No",
          "readOnly":false,
          "maxLength":30,
          "type":"Boolean"
            },
        "ConCompForecastdate": {
          "description":"Construction Completion Date Forecast",
          "example":"12/31/2015",
          "readOnly":false,
          "maxLength":44,
          "type":"datetime"
            },
        "ConCompActualdate": {
          "description":"Construction Completion Date Actual",
          "example":"12/31/2015",
          "readOnly":false,
          "maxLength":44,
          "type":"datetime"
            },
        "DepositForecastDate": {
          "description":"Deposit Forecast Date",
          "example":"1/15/2016",
          "readOnly":false,
          "maxLength":44,
          "type":"datetime"
            },
        "DepositActualDate": {
          "description":"Deposit Actual Date",
          "example":"1/15/2016",
          "readOnly":false,
          "maxLength":44,
          "type":"datetime"
            },
        "ConIssueForecastdate": {
          "description":"Contract Issued Date Forecast",
          "example":"1/15/2016",
          "readOnly":false,
          "maxLength":44,
          "type":"datetime"
             },
        "ConIssueActualdate": {
          "description":"Contract Issued Date Actual",
          "example":"1/15/2016",
          "readOnly":false,
          "maxLength":44,
          "type":"datetime"
             },
        "ConSignForecastdate": {
          "description":"Contract Signed Date Forecast",
          "example":"1/15/2016",
          "readOnly":false,
          "maxLength":44,
          "type":"datetime"
             },
        "ConSignFActualdate": {
          "description":"Contract Signed Actual Date",
          "example":"1/15/2016",
          "readOnly":false,
          "maxLength":44,
          "type":"datetime"
             },
        "FinApvForecastdate": {
          "description":"Finance Approved Date Forecast",
          "example":"1/15/2016",
          "readOnly":false,
          "maxLength":44,
          "type":"datetime"
            },
        "FinApvActualdate": {
          "description":"Finance Approved Date Actual",
          "example":"1/15/2016",
          "readOnly":false,
          "maxLength":44,
          "type":"datetime"
            },
        "UnConForecastdate": {
          "description":"Unconditional Exchange Date Forecast",
          "example":"1/15/2016",
          "readOnly":false,
          "maxLength":44,
          "type":"datetime"
           },
        "UnConActualtdate": {
          "description":"Unconditional Exchange Date Actual",
          "example":"1/15/2016",
          "readOnly":false,
          "maxLength":44,
          "type":"datetime"
           },
        "SettleForecastdate": {
          "description":"Sales Settlement Date forecast",
          "example":"1/15/2016",
          "readOnly":false,
          "maxLength":44,
          "type":"datetime"
           },
        "SettleActualdate": {
          "description":"Sales Settlement Date actual",
          "example":"1/15/2016",
          "readOnly":false,
          "maxLength":44,
          "type":"datetime"
           },
        "State": {
          "description":"State",
          "example":"20 - NSW",
          "readOnly":false,
          "maxLength":20,
          "type":"String"
           },
        "Project": {
          "description":"Project",
          "example":"20 - NSW",
          "readOnly":false,
          "maxLength":70,
          "type":"String"
            },
        "Default_Root": {
          "description":"Default Root",
          "example":"ERP_Property",
          "readOnly":false,
          "maxLength":70,
          "type":"String"
        },
        "body": {
          "description": "body of the content - array with objects - in story.",
          "example": "array with some elements",
          "readOnly": false,
          "type": [
            "array"
          ]
        }
      },
      "properties": {
        "component": {
          "$ref": "#/definitions/content/definitions/component"
        },
        "PK_ProjID": {
          "$ref": "#/definitions/content/definitions/PK_ProjID"
        },
        "PK_dataareaId": {
          "$ref": "#/definitions/content/definitions/PK_dataareaId"
        },
        "CustomerID": {
          "$ref": "#/definitions/content/definitions/CustomerID"
        },
        "JobName": {
          "$ref": "#/definitions/content/definitions/JobName" 
        },
        "JobAddress": {
          "$ref": "#/definitions/content/definitions/JobAddress" 
        },
        "ProjectType": {
          "$ref": "#/definitions/content/definitions/ProjectType"
        },
        "SubProjectType": {
          "$ref": "#/definitions/content/definitions/SubProjectType" 
        },
        "BuildingType": {
          "$ref": "#/definitions/content/definitions/BuildingType"
        },
        "Storeys": {
          "$ref": "#/definitions/content/definitions/Storeys" 
        },
        "FacadeType": {
          "$ref": "#/definitions/content/definitions/FacadeType"
        },
        "Series": {
          "$ref": "#/definitions/content/definitions/Series" 
        },
        "InternalFloorArea": {
          "$ref": "#/definitions/content/definitions/InternalFloorArea"
        },
        "GasElectric": {
          "$ref": "#/definitions/content/definitions/GasElectric"
          },
        "GasElectric": {
          "$ref": "#/definitions/content/definitions/GasElectric"
          },
        "ColorCode": {
          "$ref": "#/definitions/content/definitions/ColorCode"
          },
        "CarAccomodation": {
          "$ref": "#/definitions/content/definitions/CarAccomodation"
          },
        "Bedrooms": {
          "$ref": "#/definitions/content/definitions/Bedrooms"
          },
        "BathRooms": {
          "$ref": "#/definitions/content/definitions/BathRooms"
          },
        "ListPrice": {
          "$ref": "#/definitions/content/definitions/ListPrice"
          },
        "Corner": {
          "$ref": "#/definitions/content/definitions/Corner"
          },
        "Irregular": {
          "$ref": "#/definitions/content/definitions/Irregular"
          },
        "Orientation": {
          "$ref": "#/definitions/content/definitions/Orientation"
          },
        "Aspect": {
          "$ref": "#/definitions/content/definitions/Aspect"
          },
        "Estate": {
          "$ref": "#/definitions/content/definitions/Estate"
          },
        "Stage": {
          "$ref": "#/definitions/content/definitions/Stage"
          },
        "Devstatus": {
          "$ref": "#/definitions/content/definitions/Devstatus"
          },
        "StockStatus": {
          "$ref": "#/definitions/content/definitions/StockStatus"
          },
        "JobStatus": {
          "$ref": "#/definitions/content/definitions/JobStatus"
          },
        "Available": {
          "$ref": "#/definitions/content/definitions/Available"
          },
        "WIDTH": {
          "$ref": "#/definitions/content/definitions/WIDTH"
          },
        "DEPTH": {
          "$ref": "#/definitions/content/definitions/DEPTH"
          },
        "LandArea": {
          "$ref": "#/definitions/content/definitions/LandArea"
          },
        "NumOfLots": {
          "$ref": "#/definitions/content/definitions/NumOfLots"
          },
        "RegistrationNo": {
          "$ref": "#/definitions/content/definitions/RegistrationNo"
          },
        "BuiltFormType": {
          "$ref": "#/definitions/content/definitions/BuiltFormType"
          },
        "BuildingID": {
          "$ref": "#/definitions/content/definitions/BuildingID"
          },
        "Level": {
          "$ref": "#/definitions/content/definitions/Level"
          },
        "CPAllocation": {
          "$ref": "#/definitions/content/definitions/CPAllocation"
          },
        "CPNumber": {
          "$ref": "#/definitions/content/definitions/CPNumber"
          },
        "StorageAllocation": {
          "$ref": "#/definitions/content/definitions/StorageAllocation"
          },
        "ExternalArea": {
          "$ref": "#/definitions/content/definitions/ExternalArea"
          },
        "TotalArea": {
          "$ref": "#/definitions/content/definitions/TotalArea"
          },
        "Study": {
          "$ref": "#/definitions/content/definitions/Study"
          },
        "BikeSpace": {
          "$ref": "#/definitions/content/definitions/BikeSpace"
          },
        "ConCompForecastDate": {
          "$ref": "#/definitions/content/definitions/ConCompForecastDate"
          },
        "ConCompActualdate": {
          "$ref": "#/definitions/content/definitions/ConCompActualdate"
          },
        "DepositForecastdate": {
          "$ref": "#/definitions/content/definitions/DepositForecastdate"
          },
        "DepositActualdate": {
          "$ref": "#/definitions/content/definitions/DepositActualdate"
          },
        "ConIssueForecastdate": {
          "$ref": "#/definitions/content/definitions/ConIssueForecastdate"
          },
        "ConIssueActualdate": {
          "$ref": "#/definitions/content/definitions/ConIssueActualdate"
          },
        "ConSignForecastdate": {
          "$ref": "#/definitions/content/definitions/ConSignForecastdate"
          },
        "ConSignActualdate": {
          "$ref": "#/definitions/content/definitions/ConSignActualdate"
          },
        "FinApvForecastdate": {
          "$ref": "#/definitions/content/definitions/FinApvForecastdate"
          },
        "FinApvActualdate": {
          "$ref": "#/definitions/content/definitions/FinApvActualdate"
          },
        "UnConActualdate": {
          "$ref": "#/definitions/content/definitions/UnConActualdate"
          },
        "SettleForecastdate": {
          "$ref": "#/definitions/content/definitions/SettleForecastdate"
          },
        "SettleActualdate": {
          "$ref": "#/definitions/content/definitions/SettleActualdate"
          },
        "State": {
          "$ref": "#/definitions/content/definitions/State"
          },
        "Project": {
          "$ref": "#/definitions/content/definitions/Project"
           },
        "Default_Root": {
          "$ref": "#/definitions/content/definitions/Default_Root"
        },
        "body": {
          "$ref": "#/definitions/content/definitions/body"
        }
      }
    },
    "body": {
      "description": "Body of a Content in a Story.",
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "stability": "beta",
      "strictProperties": true,
      "title": "Content Body",
      "type": [
        "object"
      ],
      "parentObject": {
        "content": { "$ref": "#/definitions/content/definitions/body" }
      },
      "definitions": {
        "component": {
          "description": "component name of the body.",
          "example": "teaser",
          "readOnly": false,
          "type": [
            "string"
          ]
        },
        "headline": {
          "description": "headline of the body content.",
          "example": "This is the headline",
          "readOnly": false,
          "type": [
            "string"
          ]
        }
      },
      "properties": {
        "component": {
          "$ref": "#/definitions/body/definitions/component"
        },
        "headline": {
          "$ref": "#/definitions/body/definitions/headline"
        }
      }
    }
  },
  "properties": {
    "story": {
      "$ref": "#/definitions/story"
    },
    "content": {
      "$ref": "#/definitions/content"
    },   
    "body": {
      "$ref": "#/definitions/body"
    }   
  },
  "links": [
    {
      "href": "https://api-ap.storyblok.com",
      "rel": "self"
    },
    {
      "href": "/jsonschemas/avj_storyblok_content",
      "method": "GET",
      "rel": "self",
      "targetSchema": {
        "additionalProperties": true
      }
    }
  ]
}
